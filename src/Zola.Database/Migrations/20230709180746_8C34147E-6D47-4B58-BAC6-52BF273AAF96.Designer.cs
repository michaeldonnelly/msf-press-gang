// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zola.Database;

#nullable disable

namespace Zola.Database.Migrations
{
    [DbContext(typeof(MsfDbContext))]
    [Migration("20230709180746_8C34147E-6D47-4B58-BAC6-52BF273AAF96")]
    partial class _8C34147E6D474B58BAC652BF273AAF96
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("CharacterInfoTrait", b =>
                {
                    b.Property<string>("CharactersId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TraitsId")
                        .HasColumnType("TEXT");

                    b.HasKey("CharactersId", "TraitsId");

                    b.HasIndex("TraitsId");

                    b.ToTable("CharacterInfoTrait");
                });

            modelBuilder.Entity("Zola.MsfClient.Models.Ability", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT");

                    b.Property<string>("IconList")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Level1Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Level2Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Level3Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Level4Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Level5Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Level6Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Level7Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Level1Id");

                    b.HasIndex("Level2Id");

                    b.HasIndex("Level3Id");

                    b.HasIndex("Level4Id");

                    b.HasIndex("Level5Id");

                    b.HasIndex("Level6Id");

                    b.HasIndex("Level7Id");

                    b.ToTable("Ability");
                });

            modelBuilder.Entity("Zola.MsfClient.Models.AbilityKit", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("BasicId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PassiveId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SpecialId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UltimateId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BasicId");

                    b.HasIndex("PassiveId");

                    b.HasIndex("SpecialId");

                    b.HasIndex("UltimateId");

                    b.ToTable("AbilityKit");
                });

            modelBuilder.Entity("Zola.MsfClient.Models.AbilityLevel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CostEnergy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("NextUpgrade")
                        .HasColumnType("TEXT");

                    b.Property<int?>("StartEnergy")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AbilityLevel");
                });

            modelBuilder.Entity("Zola.MsfClient.Models.CharacterInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AbilityKitId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmpoweredAbilityKitId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Portrait")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UnlockStars")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AbilityKitId");

                    b.HasIndex("EmpoweredAbilityKitId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Zola.MsfClient.Models.Trait", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Traits");
                });

            modelBuilder.Entity("CharacterInfoTrait", b =>
                {
                    b.HasOne("Zola.MsfClient.Models.CharacterInfo", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zola.MsfClient.Models.Trait", null)
                        .WithMany()
                        .HasForeignKey("TraitsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Zola.MsfClient.Models.Ability", b =>
                {
                    b.HasOne("Zola.MsfClient.Models.AbilityLevel", "Level1")
                        .WithMany()
                        .HasForeignKey("Level1Id");

                    b.HasOne("Zola.MsfClient.Models.AbilityLevel", "Level2")
                        .WithMany()
                        .HasForeignKey("Level2Id");

                    b.HasOne("Zola.MsfClient.Models.AbilityLevel", "Level3")
                        .WithMany()
                        .HasForeignKey("Level3Id");

                    b.HasOne("Zola.MsfClient.Models.AbilityLevel", "Level4")
                        .WithMany()
                        .HasForeignKey("Level4Id");

                    b.HasOne("Zola.MsfClient.Models.AbilityLevel", "Level5")
                        .WithMany()
                        .HasForeignKey("Level5Id");

                    b.HasOne("Zola.MsfClient.Models.AbilityLevel", "Level6")
                        .WithMany()
                        .HasForeignKey("Level6Id");

                    b.HasOne("Zola.MsfClient.Models.AbilityLevel", "Level7")
                        .WithMany()
                        .HasForeignKey("Level7Id");

                    b.Navigation("Level1");

                    b.Navigation("Level2");

                    b.Navigation("Level3");

                    b.Navigation("Level4");

                    b.Navigation("Level5");

                    b.Navigation("Level6");

                    b.Navigation("Level7");
                });

            modelBuilder.Entity("Zola.MsfClient.Models.AbilityKit", b =>
                {
                    b.HasOne("Zola.MsfClient.Models.Ability", "Basic")
                        .WithMany()
                        .HasForeignKey("BasicId");

                    b.HasOne("Zola.MsfClient.Models.Ability", "Passive")
                        .WithMany()
                        .HasForeignKey("PassiveId");

                    b.HasOne("Zola.MsfClient.Models.Ability", "Special")
                        .WithMany()
                        .HasForeignKey("SpecialId");

                    b.HasOne("Zola.MsfClient.Models.Ability", "Ultimate")
                        .WithMany()
                        .HasForeignKey("UltimateId");

                    b.Navigation("Basic");

                    b.Navigation("Passive");

                    b.Navigation("Special");

                    b.Navigation("Ultimate");
                });

            modelBuilder.Entity("Zola.MsfClient.Models.CharacterInfo", b =>
                {
                    b.HasOne("Zola.MsfClient.Models.AbilityKit", "AbilityKit")
                        .WithMany()
                        .HasForeignKey("AbilityKitId");

                    b.HasOne("Zola.MsfClient.Models.AbilityKit", "EmpoweredAbilityKit")
                        .WithMany()
                        .HasForeignKey("EmpoweredAbilityKitId");

                    b.Navigation("AbilityKit");

                    b.Navigation("EmpoweredAbilityKit");
                });
#pragma warning restore 612, 618
        }
    }
}
